#include "Orchestra/OrchestraDialect.h"
#include "Orchestra/OrchestraOps.h.inc"

// Include the header for the operation definitions.
// While not strictly required by this file, it's good practice.
// The real magic happens with the.cpp.inc includes below.
#include "mlir/Dialect/Arith/IR/Arith.h" // Example of depending on another dialect
#include "mlir/IR/Builders.h"
#include "mlir/IR/BuiltinTypes.h"
#include "mlir/IR/OpImplementation.h"

using namespace mlir;
using namespace orchestra;

// CRITICAL: This includes the TableGen-generated implementation of the
// dialect class, suchs as the `initialize` method shell.
#include "Orchestra/OrchestraOpsDialect.cpp.inc"

// Dialect initialization hook.
// This is where the dialect registers its operations, types, and attributes.
void OrchestraDialect::initialize() {
  // The addOperations<>() call is generated by the.cpp.inc file above.
  // It takes a template pack of all operations to register.
  addOperations<
    // This macro expands to a comma-separated list of all operation
    // classes defined in the.td file. Omitting this is a common cause
    // of "dialect does not have registered operation" runtime errors.
    #define GET_OP_LIST
    #include "Orchestra/OrchestraOps.h.inc"
  >();
}
